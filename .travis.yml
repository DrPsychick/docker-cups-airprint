dist: bionic
addons:
  apt:
    sources:
      - sourceline: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'
        key_url: 'https://download.docker.com/linux/ubuntu/gpg'
    update: true
sudo: required

# DOCKER_USER and DOCKER_PASS is set in travis
env:
  global:
    - DOCKER_IMG=airprint-bridge
    - IMAGE=$DOCKER_USER/$DOCKER_IMG
    - PLATFORMS=linux/amd64,linux/arm,linux/arm64
    - DOCKER_CLI_EXPERIMENTAL=enabled
  matrix:
    - VERSION=latest
#    - VERSION=groovy # need to solve: https://travis-ci.com/github/DrPsychick/docker-cups-airprint/jobs/459186393#L2505
    - VERSION=focal
    - VERSION=bionic
    - VERSION=xenial

# build the image, get CUPS version
before_script:
  # upgrade to latest docker-ce from repo
  - sudo apt-get -y install docker-ce
  # enable experimental in docker daemon
  - docker_conf=$(sudo cat /etc/docker/daemon.json 2>/dev/null || echo "{}")
  - docker_conf=$(echo "$docker_conf" |jq '. + {"experimental":true}')
  - echo "$docker_conf" | sudo tee /etc/docker/daemon.json
  - sudo service docker start
  - docker version
  - docker buildx version
  # build the image for all platforms
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --name xbuilder --use
  - docker buildx inspect --bootstrap
  # load a single image for local tests, see https://github.com/docker/buildx/issues/59
  - docker buildx build --progress plain --platform linux/amd64 -t $IMAGE --load .

# start a container and see that it becomes healthy
script:
  # travis always passes, if container becomes healthy
  - echo "Ubuntu version = $VERSION"
  - >
    echo "Starting cups...";
    docker create --name airprint-test -e CUPS_LPADMIN_PRINTER1="lpadmin -p test -D test -m 'lsb/usr/cups-pdf/CUPS-PDF_opt.ppd' -v cups-pdf:/" $IMAGE;
    docker start airprint-test;
    docker exec airprint-test bash -c 'while ! cupsctl -h localhost --share-printers 2>/dev/null; do echo -n "."; sleep 1; done';
    while [ -z "$(docker ps -f name='airprint-test' --format '{{ .Status }}' |grep '(healthy)')" ]; do echo -n "."; sleep 1; done;
    docker ps -f name='airprint-test';
    docker logs airprint-test;
    docker exec airprint-test ls -la /etc/cups/;

# push images to docker hub
after_success:
  - sh deploy.sh
